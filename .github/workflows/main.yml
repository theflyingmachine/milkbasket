name: MilkBasket Deploy

env:
  project: MilkBasket
  jenkins_url: https://vm2.cyberboy.in/jenkins
  jenkins_user: ${{ secrets.JENKINS_USER }}
  jenkins_token: ${{ secrets.JENKINS_API_TOKEN }}

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Jenkins Job
        run: |
          crumb=$(curl -s -u "${{ env.jenkins_user }}:${{ env.jenkins_token }}" "${{ env.jenkins_url }}/crumbIssuer/api/json" | jq -r '.crumb')
          build_response=$(curl -s -o /dev/null -w "%{http_code}" -X POST "${{ env.jenkins_url }}/job/MilkBasket/build" \
            -u "${{ env.jenkins_user }}:${{ env.jenkins_token }}" \
            -H "Jenkins-Crumb:$crumb")

          if [ "$build_response" != "201" ]; then
            echo "Jenkins job trigger failed with status $build_response"
            exit 1
          fi
          
          echo "Jenkins job triggered successfully"

      - name: Wait for Jenkins build to finish (sleep 60s)
        run: sleep 60

      - name: Get Jenkins build info
        id: jenkins
        run: |
          last_build=$(curl -s -u "${{ env.jenkins_user }}:${{ env.jenkins_token }}" \
            "${{ env.jenkins_url }}/job/MilkBasket/lastBuild/api/json")

          version=$(echo "$last_build" | jq -r '.id')
          timestamp=$(echo "$last_build" | jq -r '.timestamp')
          duration=$(echo "$last_build" | jq -r '.duration')
          result=$(echo "$last_build" | jq -r '.result')

          echo "Jenkins Build ID: $version"
          echo "Build Result: $result"

          echo "version=$version" >> $GITHUB_OUTPUT
          echo "timestamp=$timestamp" >> $GITHUB_OUTPUT
          echo "duration=$duration" >> $GITHUB_OUTPUT
          echo "result=$result" >> $GITHUB_OUTPUT

      - name: Create GitHub release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.jenkins.outputs.version }}
          release_name: MilkBasket-${{ steps.jenkins.outputs.version }}
          body: |
            Release Info:
            Jenkins Build Version: ${{ steps.jenkins.outputs.version }}
            Timestamp: ${{ steps.jenkins.outputs.timestamp }}
            Result: ${{ steps.jenkins.outputs.result }}
            Duration: ${{ steps.jenkins.outputs.duration }} ms
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

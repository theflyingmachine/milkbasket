"""
Django settings for milkbasket project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path

# Sentry Logging
import sentry_sdk
# Build paths inside the project like this: BASE_DIR / 'subdir'.
from django.contrib import messages
from django.urls import reverse_lazy
from sentry_sdk.integrations.django import DjangoIntegration

from milkbasket.secret import EMAIL_PASSWORD, RUN_ENVIRONMENT
from milkbasket.secret import ENV_DEBUG
from milkbasket.secret import SENTRY_DSN_DEV, SENTRY_DSN_PROD

BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '06^)^*-!6m9pp_21aq)(j#a5yv^#7y5&c8o+l#4hmgy+s!eekk'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = ENV_DEBUG

ALLOWED_HOSTS = ['milk.cyberboy.in', '127.0.0.1', '6c98-223-228-236-15.ngrok.io']

LOGIN_URL = reverse_lazy('landing')

# Application definition
import sys

sys.modules['fontawesome_free'] = __import__('fontawesome-free')
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'mathfilters',
    'maintenance_mode',
    'fontawesome_free',
    'register',
    'bill',
    'customer',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'maintenance_mode.middleware.MaintenanceModeMiddleware',
    'register.middleware.SessionExpiryMiddleware',
]

ROOT_URLCONF = 'milkbasket.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'maintenance_mode.context_processors.maintenance_mode',
            ],
        },
    },
]

WSGI_APPLICATION = 'milkbasket.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
        'timeout': 30,
    }
}

# Email Config
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'milkbasket.inc@gmail.com'
EMAIL_HOST_PASSWORD = EMAIL_PASSWORD
EMAIL_PORT = 587
DEFAULT_FROM_EMAIL = 'MilkBasket<milkbasket.inc@gmail.com>'

# Alert / Toast messaging type override
MESSAGE_TAGS = {
    messages.ERROR: 'danger',
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Kolkata'
USE_I18N = True
USE_L10N = True
USE_TZ = False  # changing timezone to disable warning

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
STATIC_URL = '/static/'
# Static Root
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

# Maintenance Mode
# if True the maintenance-mode will be activated
# MAINTENANCE_MODE = None
MAINTENANCE_MODE_IGNORE_ADMIN_SITE = True
MAINTENANCE_MODE_IGNORE_STAFF = False  # if True Register will not see the maintenance-mode page
MAINTENANCE_MODE_IGNORE_SUPERUSER = True  # if True superuser will not see maintenance-mode page
MAINTENANCE_MODE_TEMPLATE = 'register/errors/Maintenance.html'
MAINTENANCE_MODE_STATUS_CODE = 503

# Set the session cookie age to 90 days (in seconds)
SESSION_COOKIE_AGE = 60 * 60 * 24 * 90

# Sentry Logging
sentry_sdk.init(
    dsn=SENTRY_DSN_DEV if RUN_ENVIRONMENT == 'dev' else SENTRY_DSN_PROD,
    integrations=[
        DjangoIntegration(),
    ],

    # Set traces_sample_rate to 1.0 to capture 100%
    # of transactions for performance monitoring.
    # We recommend adjusting this value in production.
    traces_sample_rate=1.0,

    # If you wish to associate users to errors (assuming you are using
    # django.contrib.auth) you may enable sending PII data.
    send_default_pii=True,
    # Sentry Env Config
    environment="production",
    auto_session_tracking=True,
    # environment="dev" if RUN_ENVIRONMENT == 'dev' else "production",
    # Profiling
    _experiments={
        "profiles_sample_rate": 1.0,
    }
)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'main_formatter': {
            'format': "{asctime} - {levelname} - {module} - {funcName} - {message}",
            'style': '{',
        }
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'log_milkbasket.log',
            'formatter': 'main_formatter',
        },
    },
    'loggers': {
        '': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}
